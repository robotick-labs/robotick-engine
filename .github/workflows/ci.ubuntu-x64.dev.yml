name: CI - Build & Test (linux.dev)

on:
  push:
    branches: [main, dev]
  pull_request:
    branches: [main, dev]

jobs:
  docker-ci:
    runs-on: ubuntu-latest
    name: Build & Test (${{ matrix.preset }})

    strategy:
      matrix:
        preset:
          [
            robotick-engine-tests-linux-debug,
            robotick-engine-tests-linux-release,
          ]

    steps:
      - name: 🧾 Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: 💾 Cache devcontainer image
        uses: actions/cache@v4
        with:
          path: /tmp/devcontainer-cache
          key: devcontainer-cpp-${{ runner.os }}

      - name: ⬇️ Load or Pull devcontainer image
        run: |
          mkdir -p /tmp/devcontainer-cache
          if [ -f /tmp/devcontainer-cache/image.tar ]; then
            docker load -i /tmp/devcontainer-cache/image.tar || true
          else
            docker pull mcr.microsoft.com/devcontainers/cpp:ubuntu-24.04
            docker save mcr.microsoft.com/devcontainers/cpp:ubuntu-24.04 -o /tmp/devcontainer-cache/image.tar
          fi

      - name: 🛠️ Run CMake build inside devcontainers/cpp image
        run: |
          docker run --rm \
            -v ${{ github.workspace }}:/workspace \
            -w /workspace \
            mcr.microsoft.com/devcontainers/cpp:ubuntu-24.04 \
            bash -c "
              set -e
              echo '🔧 Running setup...'
              bash tools/setup_my_env_as_root.linux.sh
              echo '🛠️ Configuring with CMake...'
              cmake --preset ${{ matrix.preset }}
              echo '🔨 Building...'
              cmake --build --preset ${{ matrix.preset }} -j\$(nproc)
            "

      - name: ✅ Run CTest (Debug Only)
        if: matrix.preset == 'robotick-engine-tests-linux-debug'
        run: |
          docker run --rm \
            -v ${{ github.workspace }}:/workspace \
            -w /workspace \
            mcr.microsoft.com/devcontainers/cpp:ubuntu-24.04 \
            bash -c "
              set -e
              echo '🧪 Running CTest...'
              ctest --test-dir build/linux-debug/cpp/tests --output-on-failure --timeout 10
            "
